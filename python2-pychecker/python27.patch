diff -Nur pychecker-0.8.18.orig/pychecker/CodeChecks.py pychecker-0.8.18/pychecker/CodeChecks.py
--- pychecker-0.8.18.orig/pychecker/CodeChecks.py	2008-07-02 12:32:52.000000000 -0700
+++ pychecker-0.8.18/pychecker/CodeChecks.py	2010-10-20 18:51:36.900025242 -0700
@@ -1941,11 +1941,11 @@
 DISPATCH[101] = _LOAD_NAME
 DISPATCH[102] = _BUILD_TUPLE
 DISPATCH[103] = _BUILD_LIST
-DISPATCH[104] = _BUILD_MAP
-DISPATCH[105] = _LOAD_ATTR
-DISPATCH[106] = _COMPARE_OP
-DISPATCH[107] = _IMPORT_NAME
-DISPATCH[108] = _IMPORT_FROM
+DISPATCH[105] = _BUILD_MAP
+DISPATCH[106] = _LOAD_ATTR
+DISPATCH[107] = _COMPARE_OP
+DISPATCH[108] = _IMPORT_NAME
+DISPATCH[109] = _IMPORT_FROM
 DISPATCH[110] = _JUMP_FORWARD
 DISPATCH[111] = _JUMP_IF_FALSE
 DISPATCH[112] = _JUMP_IF_TRUE
diff -Nur pychecker-0.8.18.orig/pychecker/OP.py pychecker-0.8.18/pychecker/OP.py
--- pychecker-0.8.18.orig/pychecker/OP.py	2007-11-06 23:02:14.000000000 -0800
+++ pychecker-0.8.18/pychecker/OP.py	2010-10-20 18:51:36.906692145 -0700
@@ -14,11 +14,11 @@
 def LOAD_GLOBAL(op):           return op == 116
 def LOAD_CONST(op):            return op == 100
 def LOAD_FAST(op):             return op == 124
-def LOAD_ATTR(op):             return op == 105
+def LOAD_ATTR(op):             return op == 106
 def LOAD_DEREF(op):            return op == 136
 def STORE_ATTR(op):            return op == 95
 def POP_TOP(op):               return op == 1
-def IMPORT_FROM(op):           return op == 108
+def IMPORT_FROM(op):           return op == 109
 def IMPORT_STAR(op):           return op == 84
 def UNARY_POSITIVE(op):        return op == 10
 def UNARY_NEGATIVE(op):        return op == 11
@@ -40,20 +40,20 @@
     return op in (92, 93,)
 
 def IS_CONDITIONAL_JUMP(op):
-    return op in (111, 112)
+    return op in (111, 112, 114, 115)
 
 def IS_NOT(op):
     return op == 12
 
 HAVE_ARGUMENT = 90
-EXTENDED_ARG = 143
+EXTENDED_ARG = 145
 
-_HAS_NAME = (90, 91, 95, 96, 97, 98, 101, 105, 107, 108, 116,)
+_HAS_NAME = (90, 91, 95, 96, 97, 98, 101, 106, 108, 109, 116,)
 _HAS_LOCAL = (124, 125, 126,)
 _HAS_CONST = (100,)
-_HAS_COMPARE = (106,)
-_HAS_JREL = (110, 111, 112, 114, 120, 121, 122,)
-_HAS_JABS = (113, 119,)
+_HAS_COMPARE = (107,)
+_HAS_JREL = (110, 120, 121, 122,)
+_HAS_JABS = (111, 112, 113, 114, 115, 119,)
 
 _CMP_OP =  ('<', '<=', '==', '!=', '>', '>=', 'in', 'not in', 'is',
             'is not', 'exception match', 'BAD')
@@ -112,7 +112,7 @@
     "returns true if the code results in conditional execution"
     return op in [83,                   # return
                   93,                   # for_iter
-                  111, 112, 114,        # conditional jump
+                  111, 112, 114, 115,   # conditional jump
                   121,                  # setup_exec
                   130                   # raise_varargs
                   ]
